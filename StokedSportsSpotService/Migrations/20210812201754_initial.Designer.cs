// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StokedSportsSpotService.Data.DBContext;

namespace StokedSportsSpotService.Migrations
{
    [DbContext(typeof(StokedSpotContext))]
    [Migration("20210812201754_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("StokedSportsSpotService.Data.Models.Spot", b =>
                {
                    b.Property<Guid>("SpotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Directions")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("StarRating")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("SpotId");

                    b.ToTable("Spots");
                });

            modelBuilder.Entity("StokedSportsSpotService.Data.Models.SpotMedia", b =>
                {
                    b.Property<Guid>("SpotMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<short>("MediaType")
                        .HasColumnType("smallint");

                    b.Property<Guid>("SpotId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubmittedByUserId")
                        .HasColumnType("char(36)");

                    b.HasKey("SpotMediaId");

                    b.HasIndex("SpotId");

                    b.ToTable("SpotMedia");
                });

            modelBuilder.Entity("StokedSportsSpotService.Data.Models.SpotMedia", b =>
                {
                    b.HasOne("StokedSportsSpotService.Data.Models.Spot", "Spot")
                        .WithMany()
                        .HasForeignKey("SpotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spot");
                });
#pragma warning restore 612, 618
        }
    }
}
